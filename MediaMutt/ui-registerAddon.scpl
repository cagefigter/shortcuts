GetVariable v:function
If Equals "registerAddon"

    #AskforInput question="Find addons containing" defaultAnswer="Go Fetch" inputType="Text" -> mv:pattern
    GetMyShortcuts
    FilterFiles :filter{name contains "Go Fetch"} sortBy="Name" order="Ascending" -> v:available_addons

    Count Items
    If Equals 0
        ChoosefromMenu prompt="\(v:lang.NO_ADDONS_FOUND)" items=["Find Addons","Later"]
        Case "Find Addons"
            URL "https://routinehub.co/search/?q=%22go+fetch%22"
            OpenURLs
            ExitShortcut
        Case "Later"
            ExitShortcut
        End
    End

    GetVariable mv:icons."sc-back"
    SetName "Back.shortcut"

    AddtoVariable v:available_addons
    ChooseFromList prompt=v:lang.CHOOSE_ADDON_TOREG -> mv:addon
    GetName
    If Equals "Back"
        ExitShortcut
    End

    @callExt mv:addon {fn:register}
    SetVariable v:addon

    @call {fn:getAddonsFile}
    SetVariable v:addon_file
    GetDictionaryValue get=Value key="addons" -> v:addon_list
    If Contains mv:addon
        Text "\(v:lang.ADDON_ALREADY_REG)"
        ReplaceText (
            findText="{ADDON}",
            replaceWith=mv:addon,
            caseSensitive=true,
            regularExpression=false
        ) -> mv:msg_addon_regged
        ShowAlert title=v:self message=mv:msg_addon_regged
    Otherwise
        GetVariable mv:addon
        AddToVariable v:addon_list
        SetVariable v:addon_list
        Text "DEL_ME"
        AddToVariable v:addon_list
        SetVariable v:addon_list

        GetVariable v:addon_file
        SetDictionaryValue key="addons" value=v:addon_list -> mv:new_file
        @dbgQuicklook
        ReplaceText findText=",\"DEL_ME\"" replaceWith="" caseSensitive=true regularExpression=false
        ReplaceText findText="\"DEL_ME\"" replaceWith="" caseSensitive=true regularExpression=false
        @dbgQuicklook
        SaveFile service="iCloud Drive" askWheretoSave=false destinationPath="\(v:opt:"storage.cfgdir")/\(v:opt:"storage.addons")" overwriteIfFileExists=true
        Text "\(v:lang.ADDON_NOW_REG)"
        ReplaceText (
            findText="{ADDON}",
            replaceWith=mv:addon,
            caseSensitive=true,
            regularExpression=false
        ) -> mv:msg_addon_now_regged
        ShowAlert title=v:self message=mv:msg_addon_now_regged showCancelButton=false
    End
    ExitShortcut
End