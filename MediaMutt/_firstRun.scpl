GetVariable v:function
If Equals "firstRun"
    @dbgAlert "Entered firstRun"
    @call {fn:getSetupState}
    SetVariable v:setup
    GetDictionaryValue get="All Values"
    CalculateStatistics operation="Sum" -> mv:sum
    @dbgAlert "_firstRun: Setup State Count = \(mv:sum)"
    If "Is Less Than" 4
        Text "Configuration for \(v:self) is not yet complete.\nThe following steps will guide you through the configuration." -> mv:prompt1
        ChooseFromMenu prompt=mv:prompt1 items=["Next"]
        Case "Next"
        End

        GetVariable v:setup:OptFileExists
        If Equals 0
            Text "The preference file is not yet created.\nPress next to create it now." -> mv:prompt2
            ChooseFromMenu prompt=mv:prompt2 items=["Next"]
            Case "Next"
            End

            GetVariable v:userOpts
            SetName v:opt:"storage.file"
            SaveFile a{
                service="iCloud Drive"
                askwheretosave=false
                destinationpath="\(v:opt:"storage.dir")/"
                overwriteiffileexists=true
            }

            CreateFolder service="iCloud Drive" path="\(v:opt:"storage.dir")/downloads"

            Text "Options file created. Tap Next." -> mv:prompt3
            ChooseFromMenu prompt=mv:prompt3 items=["Next"]
            Case "Next"
            End
        End

        GetVariable v:setup:AddonFileExists
        If Equals 0
            Text "The addon file is not yet created.\nPress next to create it now." -> mv:prompt4
            ChooseFromMenu prompt=mv:prompt4 items=["Next"]
            Case "Next"
            End

            Text
            |{
            |  "addons":[]
            |}
            SetName v:opt:"storage.addons"
            SaveFile a{
                service="iCloud Drive"
                askwheretosave=false
                destinationpath="\(v:opt:"storage.dir")/"
                overwriteiffileexists=true
            }
            Text "File created. Tap Next." -> mv:prompt5
            ChooseFromMenu prompt=mv:prompt5 items=["Next"]
            Case "Next"
            End
        End

        ChooseFromMenu prompt="Configuration is complete." ["OK"]
        Case "OK"
        End

        @call {fn:getSetupState}
        SetVariable v:setup

    End
    GetVariable v:setup
    @dbgAlert "Exited firstRun"
    ExitShortcut
End