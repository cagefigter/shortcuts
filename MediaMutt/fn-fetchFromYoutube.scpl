Comment
|..:: fetchFromYoutube ::..
|Download videos from Youtube
|args:
| `url`: URL of the video page
|
|notes:
| accepts both youtube.com and yutu.be
| links
GetVariable v:function
If Equals "fetchFromYoutube"
    @dbgAlert "Entered fetchFromYoutube\nargs\nurl = \(v:argv:url)"

    Comment
    | https://tyrrrz.me/Blog/Reverse-engineering-YouTube

    GetVariable v:argv:url
    Expandurl -> mv:expanded_url
    GetComponentOfUrl "Query"
    GetDictionaryFromInput -> v:query
    GetDictionaryValue get="Value" key="v"
    #GetVariable v:query:v
    SetVariable v:video_id
    @dbgAlert "Video ID = \(v:video_id)"
    Url "http://youtube.com/get_video_info?video_id=\(v:video_id)&el=detailpage&ps=default&eurl=&gl=US&hl=en"
    #GetContentsOfUrl advanced=false headers=false -> mv:raw_video_info
    GetContentsofURL (
        advanced=true,
        method="GET",
        headers=true,
        headers2={
            "Referer": "\(mv:expanded_url)"
        }
    ) -> mv:raw_video_info
    @dbgAlert "RAW Video Info = \(mv:raw_video_info)"
    GetDictionaryfromInput
    SetVariable v:video_info
    @dbgAlert "DICT Video Info = \(v:video_info)"

    #@dbgViewWithJayson

    GetDictionaryValue get="Value" key="player_response" -> mv:raw_player_response
    @dbgAlert "raw player_respose \(mv:raw_player_response)"
    #GetVariable v:video_info.player_response
    GetDictionaryfromInput -> mv:player_response
    @dbgAlert "dict player_respose \(mv:player_response)"

    GetVariable mv:player_response
    GetDictionaryValue get="Value" key="videoDetails.title"
    ReplaceText findtext="+" replacewith=" "
    SetVariable v:yt_video_title

    @dbgAlert "Video Title = \(v:yt_video_title)"

    Dictionary {
        "_order":"38,37,85,96,22,84,95,59,78,83,94,18,82,93,92,132,91,151",
        "38":"4K",
        "37":"1080p",
        "85":"1080p",
        "96":"1080p",
        "22":"720p",
        "84":"720p",
        "95":"720p",
        "59":"480p",
        "78":"480p",
        "83":"480p",
        "94":"480p",
        "18":"360p",
        "82":"360p",
        "93":"360p",
        "92":"240p",
       "132":"240p",
        "91":"144p",
       "151":"144p"
    }

    SetVariable v:itags

    GetVariable mv:player_response
    GetDictionaryValue get="Value" key="playabilityStatus.status" -> mv:play_status
    Text "\(mv:play_status)"
    If Equals "LOGIN_REQUIRED"
        Url "http://youtube.com/get_video_info?video_id=\(v:video_id)&el=embedded&ps=default&eurl=&gl=US&hl=en"
        GetContentsofURL (
            advanced=true,
            method="GET",
            headers=true,
            headers2={
                "Referer": "\(mv:expanded_url)"
            }
        ) -> mv:raw_video_info_ar
        GetDictionaryfromInput
        SetVariable v:video_info_ar
        GetDictionaryValue get="Value" key="url_encoded_fmt_stream_map" -> mv:stream_map
        SplitText separator="Custom" custom="," -> v:split_stream
        RepeatwithEach
            GetDictionaryfromInput
        End -> v:streams
    Otherwise
        GetVariable mv:player_response
        GetDictionaryValue get="Value" key="streamingData.formats" -> v:streams
    End
    #@dbgViewWithJayson

    #GetVariable v:video_info
    #GetDictionaryValue get="Value" key="url_encoded_fmt_stream_map" -> mv:stream_map
    #@dbgAlert "stream_map = \(mv:stream_map)"
    #SplitText separator="Custom" custom="," -> mv:split_stream
    #@dbgAlert "split_stream \(mv:split_stream)"
    GetVariable  v:streams
    RepeatWithEach
        #@dbgAlert "testing repeat item \(v:"Repeat Item")"
        #GetDictionaryFromInput
        SetVariable v:stream

        @dbgAlert "stream \(v:stream)"
        #@dbgViewWithJayson

        GetVariable v:itags
        GetDictionaryValue get="Value" key="_order"
        SplitText separator=Custom custom="," -> mv:itag
        If Contains v:stream.itag
            @dbgAlert "matched \(mv:itag) == \(v:stream.itag)"
            GetVariable v:itags
            GetDictionaryValue get=Value key=v:stream.itag -> v:quality_name

            GetVariable v:stream
            GetDictionaryValue get="Value" key="url"
            #SetName "\(v:quality_name) (itag_\(v:stream:itag))"
            AddToVariable v:stream_options
        otherwise
            @dbgAlert "not matched \(mv:itag) == \(v:stream:itag)"
        End
    End

    # get highest quality
    GetVariable v:stream_options
    @dbgQuicklook
    GetItemFromList get="First Item" -> mv:media_url
    @dbgAlert "media url = \(mv:media_url)"
    GetContentsOfUrl -> mv:downloaded_media
    SetName v:yt_video_title

    @dbgAlert "Exited fetchFromYoutube"
    ExitShortcut
End
Comment
|End fetchFromYoutube