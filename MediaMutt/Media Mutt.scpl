@icon "dog"
@color "red"
@ShowInWidget true
@ShowInShareSheet [
	safariwebpage,
	string,
	url
]

@set debug false
@set mock false
@import "../lib/helpers.scpl"


Comment `
                   ..:: Media Mutt ::..

                   by @supermamon
`
Comment `Media Mutt is you all-in-one
downloader for media pages on the web.
It supports the most popular photo and
video sharing sites and can support more
with the help of addons.
`
Comment `The best feature? It doesn't use
third-party websites to download that
may track urls that you send to them.
Everything is done within the shortcut.
`

Comment "Input checking"
SetVariable v:argv
Count Items
If Equals 0
    GetClipboard -> v:argv
    # Assume it was run in the widget
    # in case it's not run in the widget
    # it's okay because that means
    # the user is already in the app
    # so this won't have any effect.
    # if it was run from the share sheet
    # it won't even go here.
    # this is done because it's such a
    # large shortcut, it needs to be run
    # either in the app or as a share
    # extension to prevent crashing due
    # to the limited memory allocated in
    # the widget.
    ContinueShortcutinApp
End

Dictionary {
    shortcut    : "Media Mutt",
    author      : "@supermamon",
    version     : "2.0.2",
    settings    : {
        updater : {
            ID: 3184
        },
        storage : {
            dir     : "MediaMutt",
            file    : "media_mutt.json",
            addons  : "addons.json"
        },
        <bool> TestMode : false,
    }
} -> mv:meta
GetVariable mv:meta:shortcut -> v:self
GetVariable mv:meta:settings -> v:opt

# load user options
Comment `
            ..:: Default Settings ::..
                Do not change
`
Dictionary {
    defaultOpts: {
        sysOrder                    : [
            "ShowAlerts",
            "ViewBeforeSave",
            "DownloadImmediately",
            "SaveTo",
            "DownloadFolder",
            "UpdateInterval",
        ],
        sysLastUpdateCheck          : "2019-01-01 00:00",
        <bool> ShowAlerts           : true,
        <bool> DownloadImmediately  : false,
        <bool> ViewBeforeSave       : true,
        SaveTo                      : "Always Ask",
        DownloadFolder              : "\(v:opt:"storage.dir")/downloads",
        UpdateInterval              : 12,
    }
}
GetDictionaryValue get="Value" key="defaultOpts" -> v:defaultOpts
SetVariable v:userOpts

Comment `..:: Load User Saved Settings ::..
If exists, override the default settings
`
GetFile a{
    service="iCloud Drive"
    showDocumentPicker=false
    filePath="\(v:opt:"storage.dir")/\(v:opt:"storage.file")"
    errorIfnotFound=false
} -> mv:savedOpts
Count Items
If "Is Greater Than" 0
    GetVariable v:userOpts
    GetDictionaryValue get="All Keys"
    RepeatwithEach
        GetVariable mv:savedOpts
        GetDictionaryValue get="Value" key=v:"Repeat Item" -> mv:value
        Count Items
        If "Is Greater Than" 0
            GetVariable v:userOpts
            SetDictionaryValue key=v:"Repeat Item" value=mv:value
            SetVariable v:userOpts
        End

    End
End

Comment "..:: Settings Icons ::.."
@import "./_fontawesome.scpl"

Comment `..:: Localized Types ::..
`
Dictionary items={"key":"val"}
GetType
SetVariable v:lDictionary
Text "Text"
GetType -> v:lText

Comment "..:: Function Call Detection"
GetVariable v:argv
GetType
If Equals v:lDictionary
    GetVariable v:argv:fn -> v:function
    Text "\(v:function)"
    Count Characters
    If Equals 0
        Nothing -> v:argv
        Text "main" -> v:function
    End
Otherwise

    @dbgAlert "Not a dictionary, \(v:argv) "
    @call {fn:firstRun}
    SetVariable v:setup

    GetVariable v:setup.SetupComplete
    If "Is Less Than" 2
        ShowAlert title=v:self message="Configuration is not yet completed. Please re-run this shortcut to configure."
        ExitShortcut
    End

    Text "\(v:argv)"
    GetURLsFromInput -> v:url
    Dictionary {fn:main, url:v:url} -> v:argv
    Text "main" -> v:function

End


@dbgAlert "Calling: \(v:function)\n-----------\nWith Parameters:\n\(v:argv)"

@import "./_main.scpl"
@import "./_detectInput.scpl"
@import "./_firstRun.scpl"
@import "../lib/vcard_menu.scpl"

@import "./fn-fetchMedia.scpl"

@import "./fn-fetchFromDirectLink.scpl"

@import "./fn-fetchFromYoutube.scpl"

@import "./fn-fetchFromInstagramPost.scpl"

@import "./fn-fetchFromGfycat.scpl"
@import "./fn-fetchFromImgurGifV.scpl"
@import "./fn-fetchFromImgurPost.scpl"
@import "./fn-fetchFromStreamable.scpl"

@import "./fn-fetchFromRedditPost.scpl"
@import "./fn-fetchFromRedditDirectImage.scpl"
@import "./fn-fetchFromRedditHostedVideo.scpl"
@import "./fn-fetchFromRedditLinkedMedia.scpl"
@import "./fn-getKeySafeValue.scpl"
@import "./fn-fetchFromTumblr.scpl"


@import "./ui-showMessage.scpl"
@import "./ui-getSetupState.scpl"
@import "./ui-getUserOpts.scpl"
@import "./ui-getAddonsFile.scpl"
@import "./ui-getAddonsList.scpl"
@import "./ui-manageAddons.scpl"
@import "./ui-registerAddon.scpl"
@import "./ui-removeAddon.scpl"
@import "./ui-findAddonsRH.scpl"
@import "./ui-moveFiles.scpl"
@import "./ui-showDownloads.scpl"

@import "./fn-getUpdates.scpl"
@import "./fn-checkForUpdate.scpl"
@import "./fn-updateSetting.scpl"

@import "./ui-showSettings.scpl"


#
ShowAlert title=v:self message="Invalid function call - \(v:function)" showCancelButton=false
Nothing
ExitShortcut

Comment`
        P L E A S E   R E A D

Due to changes in iOS 13, you may
get addition prompts for access to
iCloud Drive and notifications.

You may also encounter prompts that
will say like:

        "Media Mutt" would like to
         access "sub.domain.com"
    This shortcut will be able to send
          data to this website.

Rest assured that this shortcut does
not send data to the indicated website
but rather downloads the media you
wanted.

However, Media Mutt does use
www.fileconverto.com to combine
video and audio for links that have
video and audio separated, so the
actual video and audio is being sent
to that site.

As of this version, only videos
hosted on reddit servers fit this
criteria.
`