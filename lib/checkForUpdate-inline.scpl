/*
# Arguments

* `v:argv:id` - routinehub id for shortcut
* `v:argv:version` - version number of local copy
* `v:argv:name` - name of shortcut
* `v:argv:NoUpdAlert` - show|hide

# Required Libraries
* lib/helpers.scpl

*/
@dbgAlert "Entered checkForUpdate-inline"
SetVariable v:argv
Comment
|..:: checkForUpdate ::..
|Check if there is an updated version
|of the shortcut on routinehub.co
|
GetCurrentIPAddress -> mv:ip
Count Items
If "Is Greater Than" 0
    Dictionary{
        id      : v:argv:id
        version : v:argv:version
    } -> v:local
    URL "https://routinehub.co/api/v1/shortcuts/\(v:local.id)/versions/latest"
    GetContentsOfURL
    @dbgQuicklook
    @mockDictionary {
        "result": "success",
        "id": 0,
        "Version": "2.0.0",
        "URL": "https://www.icloud.com/shortcuts/be7aef8c42b4430182d7f5b3a376a9ac",
        "Notes": "Fixes",
        "Release": "June 6, 2019"
    }
    SetVariable v:remote
    GetVariable v:remote.result
    If Equals "success"
        Dictionary{
            local: v:local.version,
            remote: v:remote.Version
        } -> mv:versions

        Text -> mv:versionsHTML
        |<html><head></head><body><script>
        | function comp(a, b) {
        |  var re0=/(\\.0+)+$/;
        |  var segA=a.replace(re0,'').split('.');
        |  var segB=b.replace(re0,'').split('.');
        |  var l=Math.min(segA.length, segB.length);
        |  for (var i=0;i<l;i++) {
        |   var d=parseInt(segA[i],10)-parseInt(segB[i],10);
        |   if (d) return d;
        |  }
        |  return segA.length-segB.length;
        | };
        | var v=\(mv:versions)
        | var m=comp(v.local, v.remote)
        | m=m==0?'same':(m>0?'A rollback':'An update');
        | document.write(m);
        | </script></body></html>
        @dbgQuickLook

        URL "data:text/html,\(mv:versionsHTML)"
        GetContentsOfWebpage
        ReplaceText a{
            findtext="(^\\s+)|(\\s+$)"
            replacewith=""
            casesensitive=false
            regularexpression=true
        } -> mv:comp
        @dbgQuickLook

        If Equals "same"
            GetVariable v:argv:noUpdAlert
            If Equals "show"
                ShowAlert title=v:argv:name message="Your copy of \(v:argv:name) is up-to-date."
            End
        Otherwise
            Text "\(mv:comp) is available: \(v:local.version) -> \(v:remote.Version)\nNotes:\n\(v:remote.Notes)" -> mv:prompt
            ChooseFromMenu "\(mv:prompt)"
            | Get version \(v:remote.Version)
            | Skip
            case Install
                URL "https://routinehub.co/download/\(v:remote.id)"
                OpenURLs
            case Skip
            end
        End
    Otherwise
        ShowAlert v:argv:name
        | Could not check for updates:
        | \(v:remote.message)
    End

End
Comment
|..:: End checkForUpdate ::..
Nothing
@dbgAlert "Exited checkForUpdate-inline"